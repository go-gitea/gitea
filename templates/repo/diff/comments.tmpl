{{range .comments}}

{{$createdStr:= DateUtils.TimeSince .CreatedUnix}}
<div class="comment" id="{{.HashTag}}">
	{{if .OriginalAuthor}}
		<span class="avatar">{{ctx.AvatarUtils.Avatar nil}}</span>
	{{else}}
		{{template "shared/user/avatarlink" dict "user" .Poster}}
	{{end}}
	<div class="content comment-container">
		<div class="comment-header">
			<div class="comment-header-left tw-flex tw-items-center">
				{{if .OriginalAuthor}}
					<span class="text black tw-font-semibold tw-mr-1">
						{{svg (MigrationIcon $.root.Repository.GetOriginalURLHostname)}}
						{{.OriginalAuthor}}
					</span>
					<span class="text grey muted-links">
						{{ctx.Locale.Tr "repo.issues.commented_at" .HashTag $createdStr}}
					</span>
					<span class="text migrate">
						{{if $.root.Repository.OriginalURL}}
							({{ctx.Locale.Tr "repo.migrated_from" $.root.Repository.OriginalURL $.root.Repository.GetOriginalURLHostname}})
						{{end}}
					</span>
				{{else}}
					<span class="text grey muted-links">
						{{template "shared/user/namelink" .Poster}}
						{{ctx.Locale.Tr "repo.issues.commented_at" .HashTag $createdStr}}
					</span>
				{{end}}
			</div>
			<div class="comment-header-right actions tw-flex tw-items-center">
				{{if .Invalidated}}
					{{$referenceUrl := printf "%s#%s" $.root.Issue.Link .HashTag}}
					<a href="{{$referenceUrl}}" class="ui label basic small" data-tooltip-content="{{ctx.Locale.Tr "repo.issues.review.outdated_description"}}">
						{{ctx.Locale.Tr "repo.issues.review.outdated"}}
					</a>
				{{end}}
				{{if .Review}}
					{{if eq .Review.Type 0}}
						<div class="ui label basic small yellow pending-label" data-tooltip-content="{{ctx.Locale.Tr "repo.issues.review.pending.tooltip" (ctx.Locale.Tr "repo.diff.review") (ctx.Locale.Tr "repo.diff.review.approve") (ctx.Locale.Tr "repo.diff.review.comment") (ctx.Locale.Tr "repo.diff.review.reject")}}">
						{{ctx.Locale.Tr "repo.issues.review.pending"}}
						</div>
					{{else}}
						<div class="ui label basic small">
						{{ctx.Locale.Tr "repo.issues.review.review"}}
						</div>
					{{end}}
				{{end}}
				{{if not $.root.Repository.IsArchived}}
					{{template "repo/issue/view_content/add_reaction" dict "ActionURL" (printf "%s/comments/%d/reactions" $.root.RepoLink .ID)}}
				{{end}}
				{{template "repo/issue/view_content/context_menu" dict "item" . "delete" true "issue" false "diff" true "IsCommentPoster" (and $.root.IsSigned (eq $.root.SignedUserID .PosterID))}}
			</div>
		</div>
		<div class="ui attached segment comment-body">
			<div class="render-content markup" {{if or $.Permission.IsAdmin $.HasIssuesOrPullsWritePermission (and $.root.IsSigned (eq $.root.SignedUserID .PosterID))}}data-can-edit="true"{{end}}>
			{{if .RenderedContent}}
				{{.RenderedContent}}
			{{else}}
				<span class="no-content">{{ctx.Locale.Tr "repo.issues.no_content"}}</span>
			{{end}}
			</div>
			<div id="issuecomment-{{.ID}}-raw" class="raw-content tw-hidden">{{.Content}}</div>
			<div class="edit-content-zone tw-hidden" data-update-url="{{$.root.RepoLink}}/comments/{{.ID}}" data-content-version="{{.ContentVersion}}" data-context="{{$.root.RepoLink}}" data-attachment-url="{{$.root.RepoLink}}/comments/{{.ID}}/attachments"></div>
			{{if .Attachments}}
				{{template "repo/issue/view_content/attachments" dict "Attachments" .Attachments "RenderedContent" .RenderedContent}}
			{{end}}
		</div>
		{{$reactions := .Reactions.GroupByType}}
		{{if $reactions}}
			{{template "repo/issue/view_content/reactions" dict "ActionURL" (printf "%s/comments/%d/reactions" $.root.RepoLink .ID) "Reactions" $reactions}}
		{{end}}
	</div>
</div>
{{end}}
